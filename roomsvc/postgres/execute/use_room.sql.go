// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.25.0
// source: use_room.sql

package execute

import (
	"context"
	"errors"
	"github.com/google/uuid"
)

const createUsageRoom = `-- name: CreateUsageRoom :exec
INSERT INTO use_room (id, id_doctor, id_room)
VALUES ($1, $2, $3)
`

type CreateUsageRoomParams struct {
	ID       uuid.UUID
	IDDoctor string
	IDRoom   string
}

func (q *Queries) CreateUsageRoom(ctx context.Context, arg CreateUsageRoomParams) error {
	_, err := q.db.ExecContext(ctx, createUsageRoom, arg.ID, arg.IDDoctor, arg.IDRoom)
	return err
}

const updateUsageRoom = `-- name: UpdateUsageRoom :exec
UPDATE use_room
SET id_doctor = $1
WHERE id_room = $2
`

type UpdateUsageRoomParams struct {
	IDDoctor string
	IDRoom   string
}

func (q *Queries) UpdateUsageRoom(ctx context.Context, arg UpdateUsageRoomParams) error {
	check, err := q.db.ExecContext(ctx, updateUsageRoom, arg.IDDoctor, arg.IDRoom)
	checkId, _ := check.RowsAffected()
	if checkId == 0 {
		return errors.New("no id data found")
	}
	return err
}
